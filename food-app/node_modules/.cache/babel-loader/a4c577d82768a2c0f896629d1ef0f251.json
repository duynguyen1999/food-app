{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_training\\\\food-app\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    //const updatedItems = state.items.concat(action.item);\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n\n    if (action.type === \"REMOVE\") {\n      const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n      const exstingItem = state.items[existingCartItemIndex];\n      const updatedTotalAmount = state.totalAmount - existingItem.price;\n      let updatedItems;\n\n      if (existingItem.amount === 1) {\n        updatedItems = state.items.filter(item => item.id != action.id);\n      } else {\n        const updatedItem = { ...existingItem,\n          amount: existingItem.amount - 1\n        };\n        updatedItems = [...state.items];\n        updatedItems[existingCartItemIndex] = updatedItem;\n      }\n\n      return {\n        items: updatedItems,\n        totalAmount: updatedTotalAmount\n      };\n    }\n\n    const existingItem = state.items[existingCartItem];\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHander = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHander = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHander,\n    removeItem: removeItemFromCartHander\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 13\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["D:/React_training/food-app/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","existingCartItemIndex","findIndex","item","id","existingCartItem","updatedItems","updatedItem","amount","concat","updatedTotalAmount","price","exstingItem","existingItem","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHander","removeItemFromCartHander","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACvB;AAEA,UAAMC,qBAAqB,GAAGH,KAAK,CAACH,KAAN,CAAYO,SAAZ,CAC1BC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACI,IAAP,CAAYC,EADN,CAA9B;AAIA,UAAMC,gBAAgB,GAAIP,KAAK,CAACH,KAAN,CAAYM,qBAAZ,CAA1B;AAEA,QAAMK,YAAN;;AAEC,QAAGD,gBAAH,EAAoB;AAChB,YAAME,WAAW,GAAG,EAChB,GAAGF,gBADa;AAEhBG,QAAAA,MAAM,EAACH,gBAAgB,CAACG,MAAjB,GAA0BT,MAAM,CAACI,IAAP,CAAYK;AAF7B,OAApB;AAIAF,MAAAA,YAAY,GAAG,CAAC,GAAGR,KAAK,CAACH,KAAV,CAAf;AACAW,MAAAA,YAAY,CAACL,qBAAD,CAAZ,GAAsCM,WAAtC;AACH,KAPD,MAOK;AACFD,MAAAA,YAAY,GAAGR,KAAK,CAACH,KAAN,CAAYc,MAAZ,CAAmBV,MAAM,CAACI,IAA1B,CAAf;AACF;;AAEF,UAAMO,kBAAkB,GAAGZ,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYQ,KAAZ,GAAoBZ,MAAM,CAACI,IAAP,CAAYK,MAA/E;AAGA,WAAO;AACHb,MAAAA,KAAK,EAAEW,YADJ;AAEHV,MAAAA,WAAW,EAAEc;AAFV,KAAP;;AAKA,QAAGX,MAAM,CAACC,IAAP,KAAgB,QAAnB,EAA4B;AACxB,YAAMC,qBAAqB,GAAGH,KAAK,CAACH,KAAN,CAAYO,SAAZ,CACzBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACI,IAAP,CAAYC,EADR,CAA9B;AAGA,YAAMQ,WAAW,GAAGd,KAAK,CAACH,KAAN,CAAYM,qBAAZ,CAApB;AACA,YAAMS,kBAAkB,GAAGZ,KAAK,CAACF,WAAN,GAAoBiB,YAAY,CAACF,KAA5D;AACA,UAAIL,YAAJ;;AACA,UAAGO,YAAY,CAACL,MAAb,KAAwB,CAA3B,EAA6B;AACzBF,QAAAA,YAAY,GAAGR,KAAK,CAACH,KAAN,CAAYmB,MAAZ,CAAmBX,IAAI,IAAEA,IAAI,CAACC,EAAL,IAAWL,MAAM,CAACK,EAA3C,CAAf;AACH,OAFD,MAEK;AACD,cAAMG,WAAW,GAAG,EAAC,GAAGM,YAAJ;AAAiBL,UAAAA,MAAM,EAAEK,YAAY,CAACL,MAAb,GAAsB;AAA/C,SAApB;AACAF,QAAAA,YAAY,GAAG,CAAC,GAAGR,KAAK,CAACH,KAAV,CAAf;AACAW,QAAAA,YAAY,CAACL,qBAAD,CAAZ,GAAsCM,WAAtC;AACH;;AACD,aAAO;AACHZ,QAAAA,KAAK,EAAEW,YADJ;AAEHV,QAAAA,WAAW,EAAEc;AAFV,OAAP;AAIH;;AAED,UAAMG,YAAY,GAAGf,KAAK,CAACH,KAAN,CAAYU,gBAAZ,CAArB;AAEH;;AACD,SAAOX,gBAAP;AACH,CAvDD;;AAyDA,MAAMqB,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkC1B,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AAEA,QAAMyB,mBAAmB,GAAIhB,IAAD,IAAU;AAClCe,IAAAA,kBAAkB,CAAC;AAAElB,MAAAA,IAAI,EAAE,KAAR;AAAeG,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMiB,wBAAwB,GAAIhB,EAAD,IAAQ;AACrCc,IAAAA,kBAAkB,CAAC;AAAElB,MAAAA,IAAI,EAAE,QAAR;AAAkBI,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMiB,WAAW,GAAG;AAChB1B,IAAAA,KAAK,EAAEsB,SAAS,CAACtB,KADD;AAEhBC,IAAAA,WAAW,EAAEqB,SAAS,CAACrB,WAFP;AAGhB0B,IAAAA,OAAO,EAAEH,mBAHO;AAIhBI,IAAAA,UAAU,EAAEH;AAJI,GAApB;AAMA,sBAAQ,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACHL,KAAK,CAACQ;AADH;AAAA;AAAA;AAAA;AAAA,UAAR;AAGH,CApBD;;GAAMT,Y;;KAAAA,Y;AAqBN,eAAeA,YAAf","sourcesContent":["import { useReducer } from 'react';\r\nimport CartContext from './cart-context';\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n    if (action.type === 'ADD') {\r\n        //const updatedItems = state.items.concat(action.item);\r\n\r\n        const existingCartItemIndex = state.items.findIndex(\r\n            item => item.id === action.item.id\r\n        );\r\n\r\n        const existingCartItem  = state.items[existingCartItemIndex];\r\n\r\n        let   updatedItems ;\r\n\r\n         if(existingCartItem){\r\n             const updatedItem = {\r\n                 ...existingCartItem,\r\n                 amount:existingCartItem.amount + action.item.amount\r\n             };\r\n             updatedItems = [...state.items];\r\n             updatedItems[existingCartItemIndex] = updatedItem;            \r\n         }else{\r\n            updatedItems = state.items.concat(action.item);\r\n         }\r\n\r\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n\r\n       \r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n        };\r\n\r\n        if(action.type === \"REMOVE\"){\r\n            const existingCartItemIndex = state.items.findIndex(\r\n                (item) => item.id === action.item.id\r\n            );\r\n            const exstingItem = state.items[existingCartItemIndex];\r\n            const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n            let updatedItems;\r\n            if(existingItem.amount === 1){\r\n                updatedItems = state.items.filter(item=>item.id != action.id);\r\n            }else{\r\n                const updatedItem = {...existingItem,amount: existingItem.amount - 1};\r\n                updatedItems = [...state.items];\r\n                updatedItems[existingCartItemIndex] = updatedItem;\r\n            }\r\n            return {\r\n                items: updatedItems,\r\n                totalAmount: updatedTotalAmount\r\n            }\r\n        }\r\n\r\n        const existingItem = state.items[existingCartItem];\r\n\r\n    }\r\n    return defaultCartState;\r\n};\r\n\r\nconst CartProvider = props => {\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n    const addItemToCartHander = (item) => {\r\n        dispatchCartAction({ type: 'ADD', item: item });\r\n    };\r\n\r\n    const removeItemFromCartHander = (id) => {\r\n        dispatchCartAction({ type: 'REMOVE', id: id });\r\n    };\r\n\r\n    const cartContext = {\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemToCartHander,\r\n        removeItem: removeItemFromCartHander\r\n    };\r\n    return (<CartContext.Provider value={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>);\r\n};\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}